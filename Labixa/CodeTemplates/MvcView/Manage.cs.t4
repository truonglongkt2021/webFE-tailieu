<#@ template language="C#" HostSpecific="True" #>
<#@ output extension=".cshtml" #>
<#@ include file="Imports.include.t4" #>


@model IEnumerable<#= "<" + ViewDataTypeName + ">" #>
@Scripts.Render("~/Content/dataTable")
<#
// The following chained if-statement outputs the file header code and markup for a partial view, a view using a layout page, or a regular view.
if(IsPartialView) {
#>

<#
} else if(IsLayoutPageSelected) {
#>

@{
    ViewBag.Title = "<#= ViewName#>";
<#
if (!String.IsNullOrEmpty(LayoutPageFile)) {
#>
    Layout = "<#= LayoutPageFile#>";
<#
}
#>
}

<h2>Tên trang</h2>
@Styles.Render("~/Content/dataTable")
<#
} else {
#>

@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title><#= ViewName #></title>
</head>
<body>
<#
    PushIndent("    ");
}
#>
<p>
    @Html.ActionLink("Tạo mới", "Create",null, new {@class="btn btn-primary"})
</p>
<table id="datatable" class="table table-striped table-bordered table-hover">
 <thead>
 
       <tr>
<#
IEnumerable<PropertyMetadata> properties = ModelMetadata.Properties;

foreach (PropertyMetadata property in properties) {
    if (property.Scaffold && !property.IsPrimaryKey && !property.IsForeignKey) {
#>
<#
        // This is a temporary work around until core scaffolding provides support for independent associations.
        if (property.IsAssociation && GetRelatedModelMetadata(property) == null) {
            continue;
        }
#>
        <th>
            @Html.DisplayNameFor(model => model.<#= GetValueExpression(property) #>)
        </th>
<#
    }
}
#>
        <th></th>
    </tr>
 </thead>

 <tbody>



@foreach (var item in Model) {
    <tr>
<#
foreach (PropertyMetadata property in properties) {
    if (property.Scaffold && !property.IsPrimaryKey && !property.IsForeignKey) {
#>
<#
        // This is a temporary work around until core scaffolding provides support for independent associations.
        if (property.IsAssociation && GetRelatedModelMetadata(property) == null) {
            continue;
        }
#>
        <td>
            @Html.DisplayFor(modelItem => <#= "item." + GetValueExpression(property) #>)
        </td>
<#
    }
}

string pkName = GetPrimaryKeyName();
if (pkName != null) {
#>
<td>
                <div class="visible-md visible-lg hidden-sm hidden-xs btn-group">

                    <a href="Edit/@item.<#= pkName #>" class="btn btn-xs btn-info">
                        <i class="icon-edit bigger-120"></i>
                    </a>
                    <a href="#" class="btn btn-xs btn-danger">
                        <i class="icon-trash bigger-120"></i>
                    </a>
                </div>
            </td>
<#
} else {
#>
<td>
                <div class="visible-md visible-lg hidden-sm hidden-xs btn-group">

                    <a href="Edit/@item.<#= pkName #>" class="btn btn-xs btn-info">
                        <i class="icon-edit bigger-120"></i>
                    </a>
                    <a href="#" class="btn btn-xs btn-danger">
                        <i class="icon-trash bigger-120"></i>
                    </a>
                </div>
            </td>
<#
}
#>
    </tr>
}
 </tbody>
</table>
<#
// The following code closes the tag used in the case of a view using a layout page and the body and html tags in the case of a regular view page
#>
<#
if(!IsPartialView && !IsLayoutPageSelected) {
    ClearIndent();
#>
</body>
</html>
<#
}
#>
<#@ include file="ModelMetadataFunctions.cs.include.t4" #>


<script>
    $(document).ready(function() {
        /* Initialise the DataTable */

      $('#datatable').dataTable();
       
    });
</script>